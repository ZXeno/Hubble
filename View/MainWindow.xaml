<Window x:Class="DeviceMonitor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DeviceMonitor"
        xmlns:vw="clr-namespace:DeviceMonitor.View"
        xmlns:util="clr-namespace:DeviceMonitor.Infrastructure"
        mc:Ignorable="d"
        Title="Hubble" Height="350" Width="668" 
        ResizeMode="CanResize" 
        IsManipulationEnabled="True" 
        WindowStartupLocation="CenterScreen" 
        SnapsToDevicePixels="True"
        UseLayoutRounding="True" 
        RenderOptions.BitmapScalingMode="NearestNeighbor" 
        RenderOptions.ClearTypeHint="Enabled" >

    <Window.Resources>
        <Image x:Key="EditIcon" Source="../Assets/edit.png" />
        <Image x:Key="MenuIcon" Source="../Assets/menu.png" />
        <Image x:Key="RefreshIcon" Source="../Assets/refresh.png" />
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </Window.Resources>

    <Grid>
        <Grid.Resources>
            <util:BindingProxy x:Key="Proxy" Data="{Binding}" />
        </Grid.Resources>

        <Button Content="{StaticResource EditIcon}" Command="{Binding EditCommand}" 
                HorizontalAlignment="Left" 
                VerticalAlignment="Top" 
                Margin="10,10,0,0" 
                Width="32" Height="32" 
                BorderThickness="0" 
                Background="Transparent" 
                ToolTip="Edit computer list." 
                SnapsToDevicePixels="True"
                Padding="0"/>
        <Button Content="{StaticResource RefreshIcon}" Command="{Binding RefreshCommand}" 
                HorizontalAlignment="Left" 
                VerticalAlignment="Top"
                Margin="42,10,0,0"
                Width="32" Height="32" 
                BorderThickness="0" 
                Background="Transparent" 
                ToolTip="Manual refresh." 
                SnapsToDevicePixels="True"
                UseLayoutRounding="True" 
                RenderOptions.BitmapScalingMode="Linear" 
                RenderOptions.ClearTypeHint="Enabled"
                Padding="0"/>
        <Button Name="MenuButton" Content="{StaticResource MenuIcon}" 
                HorizontalAlignment="Right" 
                VerticalAlignment="Top" 
                Margin="0,10,10,0" 
                Width="32" Height="32" 
                BorderThickness="0" 
                Background="Transparent" 
                ToolTip="Edit preferences." 
                ContextMenuService.IsEnabled="False" 
                SnapsToDevicePixels="True"
                UseLayoutRounding="True" 
                RenderOptions.BitmapScalingMode="Linear" 
                RenderOptions.ClearTypeHint="Enabled"
                Padding="0">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.Triggers>
                        <EventTrigger RoutedEvent="Click">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </Style.Triggers>
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <MenuItem Header="List View" IsCheckable="True" Command="{Binding Source={StaticResource Proxy}, Path=Data.EnableListViewCommand}" IsChecked="{Binding Source={StaticResource Proxy}, Path=Data.ListVisibility, UpdateSourceTrigger=PropertyChanged}"/>
                                <MenuItem Header="Grid View" IsCheckable="True" Command="{Binding Source={StaticResource Proxy}, Path=Data.EnableGridViewCommand}" IsChecked="{Binding Source={StaticResource Proxy}, Path=Data.GridVisibility, UpdateSourceTrigger=PropertyChanged}"/>
                                <MenuItem Header="Save Device List" Command="{Binding Source={StaticResource Proxy}, Path=Data.SaveDeviceListCommand}" />
                                <MenuItem IsCheckable="True" IsChecked="{Binding Source={StaticResource Proxy}, Path=Data.RunAtStartup}" Header="Run at Logon" Command="{Binding Source={StaticResource Proxy}, Path=Data.ToggleRunAtLogonCommand}" />
                                <MenuItem Header="About" Command="{Binding Source={StaticResource Proxy}, Path=Data.OpenAboutCommand}" />
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>


        <ComboBox ItemsSource="{Binding Values}" SelectedItem="{Binding SelectedRateValue}" Margin="0,12,47,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="120" >
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Margin="2" Text="{Binding DisplayText}" />
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>


        <Label Content="Check Rate" Margin="0,10,172,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="70"/>

        <vw:ListControl Visibility="{Binding Path=ListVisibility, Converter={StaticResource BoolToVis}, UpdateSourceTrigger=PropertyChanged}" />
        <vw:GridControl Visibility="{Binding Path=GridVisibility, Converter={StaticResource BoolToVis}, UpdateSourceTrigger=PropertyChanged}" />
        
        <StatusBar Height="20" VerticalAlignment="Bottom">
            <Label Content="Check status: " Margin="0,-2,0,0" ClipToBounds="False" HorizontalAlignment="Left" FontSize="11" Padding="1" VerticalAlignment="Center" />
            <Label Content="{Binding CheckStatus}" Margin="0,-2,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" ClipToBounds="False" FontSize="11" Padding="1" />
        </StatusBar>

        <Popup IsOpen="{Binding EditTagViewModel.IsOpen, Mode=OneWay}" Placement="MousePoint" PopupAnimation="Fade" >
            <vw:EditTagControl DataContext="{Binding Path=EditTagViewModel, Mode=OneWay}" />
        </Popup>

        <Popup IsOpen="{Binding DeviceDetailsViewModel.IsOpen, Mode=OneWay}" Placement="Center" PopupAnimation="Fade" Width="Auto" Height="Auto" Opened="Popup_OnOpened" Closed="Popup_OnClosed" >
            <vw:DeviceDetailsControl DataContext="{Binding Path=DeviceDetailsViewModel, Mode=OneWay}" />
        </Popup>
        
    </Grid>
</Window>
